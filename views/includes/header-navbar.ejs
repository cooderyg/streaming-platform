<style>
  #alert-container.off {
    display: none !important;
  }

  #alert-count {
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: red;
    color: #fff;
    font-size: 12px;
    width: 16px;
    height: 16px;
    position: absolute;
    border-radius: 100px;
    top: -4px;
    left: 13px;
    z-index: 99;
  }
  #alert-count.off {
    display: none;
  }
  .navbar-nav > li {
    position: relative;
    padding-left: 10px;
    padding-right: 10px;
  }
  #alert-list > li > button {
    position: absolute;
    top: 0;
    right: 0;
    background-color: transparent;
    border: none;
    padding: 0;
    color: #344767;
  }
  .alert-delete-btn {
    padding: 4px;
  }

  #alert-list #alert-null-message {
    display: none;
  }

  #alert-list.off #alert-null-message {
    display: block;
    text-align: center;
  }
</style>

<nav
  class="navbar navbar-main navbar-expand-lg px-0 mx-4 shadow-none border-radius-xl position-sticky blur shadow-blur mt-4 left-auto top-1 z-index-sticky"
  id="navbarBlur"
  navbar-scroll="true"
>
  <div class="container-fluid py-1 px-3">
    <div
      class="collapse navbar-collapse mt-sm-0 mt-2 me-md-0 me-sm-4"
      id="navbar"
    >
      <a href="/recent-replay" style="display: flex; align-items: center"
        ><i
          class="fa fa-television"
          style="color: #344767"
          aria-hidden="true"
        ></i>
        <h4
          class="subscribe-title"
          style="padding: 0; font-size: 16px; margin: 0; margin-left: 12px"
        >
          최근 클립
        </h4></a
      >
      <div class="ms-md-auto pe-md-3 d-flex align-items-center">
        <div class="input-group">
          <span class="input-group-text text-body"
            ><i class="fas fa-search" aria-hidden="true"></i
          ></span>
          <input
            type="text"
            id="search-input"
            class="form-control"
            placeholder="Type here..."
          />
        </div>
      </div>
      <ul class="navbar-nav justify-content-end">
        <li id="manual-btn">
          <a
            href="https://www.notion.so/Freely-B-24175c3b86da4ccbba357adf11dc864d"
            class="nav-item d-flex align-items-center d-block"
            target="_blank"
          >
            <i class="fa fa-book me-sm-1"></i>
            <span class="d-sm-inline d-none">스트리밍 가이드</span>
          </a>
        </li>
        <li id="signin-btn">
          <a href="/sign-in" class="nav-item d-flex align-items-center d-block">
            <i class="fa fa-key me-sm-1"></i>
            <span class="d-sm-inline d-none">로그인</span>
          </a>
        </li>
        <li id="my-channel-btn">
          <a
            href="/my-channel"
            class="nav-item d-flex align-items-center d-block"
          >
            <i class="fa fa-user me-sm-1"></i>
            <span class="d-sm-inline d-none">내 채널</span>
          </a>
        </li>
        <li id="signout-btn">
          <a href="#" class="nav-item d-flex align-items-center d-block">
            <i class="fa fa-key me-sm-1"></i>
            <span class="d-sm-inline d-none">로그아웃</span>
          </a>
        </li>
        <li class="nav-item d-xl-none ps-3 d-flex align-items-center">
          <a
            href="javascript:;"
            class="nav-link text-body p-0"
            id="iconNavbarSidenav"
          >
            <div class="sidenav-toggler-inner">
              <i class="sidenav-toggler-line"></i>
              <i class="sidenav-toggler-line"></i>
              <i class="sidenav-toggler-line"></i>
            </div>
          </a>
        </li>
        <li
          id="alert-container"
          class="nav-item dropdown pe-2 d-flex align-items-center"
        >
          <div id="alert-count"><span id="alert-count-num"></span></div>
          <a
            href="javascript:;"
            class="nav-link text-body p-0"
            id="dropdownMenuButton"
            data-bs-toggle="dropdown"
            aria-expanded="false"
          >
            <i class="fa fa-bell cursor-pointer"></i>
          </a>
          <ul
            id="alert-list"
            class="dropdown-menu dropdown-menu-end px-2 py-3 me-sm-n4"
            aria-labelledby="dropdownMenuButton"
          >
            <li id="alert-null-message">수신된 알림이 없습니다.</li>
          </ul>
        </li>
      </ul>
    </div>
  </div>
</nav>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const signinBtn = document.getElementById('signin-btn');
    const signoutBtn = document.getElementById('signout-btn');
    const myChannelBtn = document.getElementById('my-channel-btn');
    const alertContainerEl = document.querySelector('#alert-container');
    function getCookie(token) {
      const value = `; ${document.cookie}`;
      const parts = value.split(`; ${token}=`);
      if (parts.length === 2) {
        return parts.pop().split(';').shift();
      }
    }
    const accessToken = getCookie('accessToken');

    if (accessToken) {
      signinBtn.style.display = 'none';
      signoutBtn.style.display = 'block';
      myChannelBtn.style.display = 'block';
    } else {
      signinBtn.style.display = 'block';
      signoutBtn.style.display = 'none';
      myChannelBtn.style.display = 'none';
      alertContainerEl.classList.add('off');
    }

    signoutBtn.addEventListener('click', async (event) => {
      event.preventDefault();
      await fetch('/api/auth/logout');
      location.href = '/';
    });
  });

  const alertListEl = document.querySelector('#alert-list');
  const alertCount = document.querySelector('#alert-count');
  const alertCountNum = document.querySelector('#alert-count-num');
  const alertBell = document.querySelector('.fa-bell');

  const getAlerts = async () => {
    if (document.cookie) {
      const response = await fetch('/api/alerts');
      const data = await response.json();
      if (!response.ok) {
        alertCount.classList.add('off');
        alertListEl.classList.add('off');
        return;
      }
      if (!data.length) {
        alertCount.classList.add('off');
        alertListEl.classList.add('off');
        return;
      }
      alertCountNum.innerText = data.length;

      const temp = data
        .map((el) => {
          const imgTemp = el.channel.profileImgUrl || '/img/profile.jpg';

          return `
            <li class="mb-2">
              <a class="dropdown-item border-radius-md" href="javascript:;">
                <div class="d-flex py-1">
                  <div class="my-auto">
                    <img
                      src=${imgTemp}
                      class="avatar avatar-sm me-3"
                      style="border-radius: 100px"
                    />
                  </div>
                  <div class="d-flex flex-column justify-content-center">
                    <h6 class="text-sm font-weight-normal mb-1">
                      ${el.message}
                    </h6>
                    <p class="text-xs text-secondary mb-0">
                      <i class="fa fa-clock me-1"></i>
                      ${new Date(el.createdAt).toLocaleString()}
                    </p>
                  </div>
                </div>
              </a>
              <button>
                <i class="fa fa-times alert-delete-btn" data-id=${
                  el.id
                } aria-hidden="true"></i>
              </button>
            </li>
          `;
        })
        .join('');
      alertListEl.insertAdjacentHTML('afterbegin', temp);

      alertListEl.addEventListener('click', (e) => {
        e.stopPropagation();
      });

      const alertDelteBtnEls = document.querySelectorAll('.alert-delete-btn');
      alertDelteBtnEls.forEach((alertDelteBtnEl) => {
        alertDelteBtnEl.addEventListener('click', async (e) => {
          const alertLiEl = e.target.parentNode.parentNode;
          const alertId = e.target.getAttribute('data-id');
          const response = await fetch(`/api/alerts/read/${alertId}`, {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
          });
          if (!response.ok) return;
          const data = await response.json();
          if (data.message === '수정완료') {
            alertLiEl.remove();
            alertCountNum.innerText = Number(alertCountNum.innerText) - 1;

            if (Number(alertCountNum.innerText) === 0) {
              alertCount.classList.add('off');
              alertListEl.classList.add('off');
            }
          }
        });
      });
    } else {
      alertCount.classList.add('off');
      alertListEl.classList.add('off');
    }
  };

  getAlerts();

  const mainPath = window.location.pathname.split('/')[1];

  if (mainPath !== 'streaming' && mainPath !== 'streaming-control') {
    const setSocket = async () => {
      const response = await fetch('/api/subscribes/channels');
      const data = await response.json();
      const channelIds = data.map((el) => el.channel.id);
      if (response.ok) {
        const socket = io('/', {
          extraHeaders: {
            'room-id': '',
            'channel-ids': JSON.stringify({ channelIds }), // api 만들고 구독채널 넣기
          },
        });
        socket.on('alert', (data) => {
          if (alertCount.classList.contains('off')) {
            alertCount.classList.remove('off');
            alertListEl.classList.remove('off');
          }
          alertBell.classList.add('animate__animated', 'animate__swing');
          setTimeout(() => {
            alertBell.classList.remove('animate__animated', 'animate__swing');
          }, 1000);

          alertCountNum.innerText = alertCountNum.innerText
            ? Number(alertCountNum.innerText) + 1
            : 1;
          const messageTemp = data.isOnAir
            ? `${data.channelName} 채널이 방송을 시작했습니다.`
            : `${data.channelName} 채널의 공지: ${data?.noticeContent}`;

          const imgTemp = data.profileImgUrl || '/img/profile.jpg';
          const temp = `
            <li class="mb-2">
              <a class="dropdown-item border-radius-md" href="javascript:;">
                <div class="d-flex py-1">
                  <div class="my-auto">
                    <img
                      src=${imgTemp}
                      class="avatar avatar-sm me-3"
                      style="border-radius: 100px"
                    />
                  </div>
                  <div class="d-flex flex-column justify-content-center">
                    <h6 class="text-sm font-weight-normal mb-1">
                      ${messageTemp}
                    </h6>
                    <p class="text-xs text-secondary mb-0">
                      <i class="fa fa-clock me-1"></i>
                      ${new Date(Date.now()).toLocaleString()}
                    </p>
                  </div>
                </div>
              </a>
              <button>
                <i class="fa fa-times alert-delete-btn" data-id="" aria-hidden="true"></i>
              </button>
            </li>
          `;
          // TODO: alert id 역추적

          alertListEl.insertAdjacentHTML('afterbegin', temp);

          const firstLiDeleteBtn = document.querySelector(
            '#alert-list > li:first-child .alert-delete-btn',
          );

          firstLiDeleteBtn.addEventListener('click', (e) => {
            const alertLiEl = e.target.parentNode.parentNode;
            alertLiEl.remove();
            if (Number(alertCountNum.innerText) - 1 === 0) {
              alertCountNum.innerText = 0;
              alertCount.classList.add('off');
              alertListEl.classList.add('off');
            } else {
              alertCountNum.innerText = Number(alertCountNum.innerText) - 1;
            }
          });
        });
      }
    };
    setSocket();
  }

  const searchInputEl = document.querySelector('#search-input');
  searchInputEl.addEventListener('keydown', (e) => {
    if (e.keyCode === 13) {
      if (searchInputEl.value === '') return alert('검색어를 입력해주세요.');
      window.location.href = `/search?keyword=${searchInputEl.value}`;
    }
  });

  const redirect = window.location.href;
  window.localStorage.setItem('redirect', redirect);
</script>
